1 引入Fresco
 build.gradle 文件:
 dependencies {
   // 其他依赖
   ...
   // 添加依赖
   compile 'com.facebook.fresco:fresco:0.12.0'
 }

1.2  下面的依赖需要根据需求添加：
dependencies {
  // 在 API < 14 上的机器支持 WebP 时，需要添加
  compile 'com.facebook.fresco:animated-base-support:0.12.0'

  // 支持 GIF 动图，需要添加
  compile 'com.facebook.fresco:animated-gif:0.12.0'

  // 支持 WebP （静态图+动图），需要添加
  compile 'com.facebook.fresco:animated-webp:0.12.0'
  compile 'com.facebook.fresco:webpsupport:0.12.0'

  // 仅支持 WebP 静态图，需要添加
  compile 'com.facebook.fresco:webpsupport:0.12.0'
}


2 开始使用 Fresco
2.1
在加载图片之前，你必须初始化Fresco类。你只需要调用Fresco.initialize一次即可完成初始化，
在 Application 里面做这件事再适合不过了（如下面的代码），注意多次的调用初始化是无意义的。
[MyApplication.java]
public class MyApplication extends Application {
	@Override
	public void onCreate() {
		super.onCreate();
		Fresco.initialize(this);
	}
}

2.2
做完上面的工作后，你需要在 AndroidManifest.xml 中指定你的 Application 类。
为了下载网络图片，请确认你声明了网络请求的权限。
 <manifest
    ...
    >
    <uses-permission android:name="android.permission.INTERNET" />
    <application
      ...
      android:label="@string/app_name"
      android:name=".MyApplication"
      >
      ...
    </application>
    ...
  </manifest>

2.3
在xml布局文件中, 加入命名空间：
<!-- 其他元素-->
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:fresco="http://schemas.android.com/apk/res-auto"
    android:layout_height="match_parent"
    android:layout_width="match_parent">

2.4
加入SimpleDraweeView:
    <com.facebook.drawee.view.SimpleDraweeView
        android:id="@+id/my_image_view"
        android:layout_width="130dp"
        android:layout_height="130dp"
        fresco:placeholderImage="@drawable/my_drawable"
      />

2.5
开始加载图片:
Uri uri = Uri.parse("https://raw.githubusercontent.com/facebook/fresco/gh-pages/static/logo.png");
SimpleDraweeView draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view);
draweeView.setImageURI(uri);


